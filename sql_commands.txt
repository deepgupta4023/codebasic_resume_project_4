REQUESTS

1. Provide the list of markets in which customer "Atliq Exclusive" operates its business in the APAC region:

SELECT DISTINCT market 
FROM dim_customer 
WHERE customer='Atliq Exclusive' and region='APAC'
;

2.What is the percentage of unique product increase in 2021 vs. 2020? The final output contains these fields, 
unique_products_2020 
unique_products_2021 
percentage_chg:


SELECT
	(SELECT COUNT(DISTINCT product_code) FROM fact_sales_monthly WHERE fiscal_year=2020)  AS unique_products_2020,
	(SELECT COUNT(DISTINCT  product_code)  FROM fact_sales_monthly where fiscal_year=2021) as unique_products_2021,
	(SELECT ROUND((unique_products_2021-unique_products_2020)/unique_products_2020*100,2)) as percentage_chg ;


3.Provide a report with all the unique product counts for each segment and sort them in descending order of product counts. 
The final output contains 2 fields, 
segment 
product_count:

SELECT p.segment, COUNT(DISTINCT s.product_code) AS product_count 
FROM dim_product p RIGHT JOIN fact_sales_monthly s ON p.product_code=s.product_code
GROUP BY p.segment 
ORDER BY product_count  DESC;



4.Follow-up: Which segment had the most increase in unique products in 2021 vs 2020? 
The final output contains these fields, 
segment product_count_2020 
product_count_2021 
difference:

SELECT 2020_sales.segment, 2020_sales.unique_products AS product_count_2020, 2021_sales.unique_products product_count_2021,
       2021_sales.unique_products-2020_sales.unique_products AS difference
			FROM
				(SELECT p.segment, f.fiscal_year, COUNT( DISTINCT f.product_code) AS unique_products
				FROM fact_sales_monthly f JOIN dim_product p ON f.product_code=p.product_code
				WHERE f.fiscal_year=2020
				GROUP BY p.segment) AS 2020_sales
			JOIN
				(SELECT p.segment, f.fiscal_year, COUNT( DISTINCT f.product_code) AS unique_products
				FROM fact_sales_monthly f JOIN dim_product p ON f.product_code=p.product_code
				WHERE f.fiscal_year=2021
				GROUP BY p.segment) AS 2021_sales

ON 2020_sales.segment=2021_sales.segment
ORDER BY difference DESC ;

5.Get the products that have the highest and lowest manufacturing costs. 
The final output should contain these fields, 
product_code 
product 
manufacturing_cost:

SELECT m.product_code, p.product, m.manufacturing_cost 
FROM fact_manufacturing_cost m JOIN dim_product p
	ON m.product_code=p.product_code 
WHERE manufacturing_cost IN
		(SELECT MAX(manufacturing_cost) 
         FROM fact_manufacturing_cost)
OR manufacturing_cost IN
		(SELECT MIN(manufacturing_cost) 
         FROM fact_manufacturing_cost)
; 


6.Generate a report which contains the top 5 customers who received an average high pre_invoice_discount_pct for the fiscal year 2021 
and in the Indian market. The final output contains these fields, 
customer_code 
customer 
average_discount_percentage:

SELECT d.customer_code,c.customer, AVG(d.pre_invoice_discount_pct) AS average_discount_percentage 
FROM fact_pre_invoice_deductions d 
	JOIN dim_customer c 
    ON d.customer_code=c.customer_code
WHERE d.fiscal_year=2021 AND c.market='India'
GROUP BY d.customer_code 
ORDER BY average_discount_percentage DESC 
LIMIT 5
;

7.Get the complete report of the Gross sales amount for the customer “Atliq Exclusive” for each month . 
This analysis helps to get an idea of low and high-performing months and take strategic decisions. 
The final report contains these columns 
Month 
Year 
Gross sales Amount:

SELECT MONTH(s.date) AS mth,YEAR(s.date) AS yr, ROUND(SUM(p.gross_price*s.sold_quantity)/1000000,2)  AS gross_sale_amount
FROM fact_sales_monthly s JOIN fact_gross_price p
	ON s.product_code=p.product_code
AND s.fiscal_year = p.fiscal_year
WHERE s.customer_code IN
	(SELECT customer_code 
    FROM dim_customer 
    WHERE customer='Atliq Exclusive')
GROUP BY yr, mth
ORDER BY yr,mth;



8. In which quarter of 2020, got the maximum total_sold_quantity? 
The final output contains these fields sorted by the total_sold_quantity, 
Quarter 
total_sold_quantity:

SELECT QUARTER(date) as Quarter,SUM(sold_quantity) AS total_sales_qty
FROM fact_sales_monthly
WHERE YEAR(date)=2020
GROUP BY Quarter
ORDER BY total_sales_qty DESC;


9. Which channel helped to bring more gross sales in the fiscal year 2021 and the percentage of contribution? 
The final output contains these fields, channel gross_sales_mln percentage:

SELECT customer.channel, ROUND(SUM(sales.sold_quantity*price.gross_price)/1000000,2) AS gross_sales_mln, 
ROUND(SUM(sales.sold_quantity*price.gross_price)*100/
			(SELECT SUM(s.sold_quantity*p.gross_price)
			FROM fact_sales_monthly s JOIN fact_gross_price p ON s.product_code=p.product_code AND s.fiscal_year=p.fiscal_year 
			WHERE s.fiscal_year=2021)
            ,2)  AS percentage
FROM  fact_sales_monthly sales JOIN fact_gross_price price ON sales.product_code=price.product_code AND sales.fiscal_year=price.fiscal_year
								JOIN dim_customer customer ON sales.customer_code=customer.customer_code
WHERE sales.fiscal_year=2021
GROUP BY customer.channel 
ORDER BY percentage DESC;



10. Get the Top 3 products in each division that have a high total_sold_quantity in the fiscal_year 2021? 
The final output contains these fields, 
division 
product_code
product total_sold_quantity 
rank_order

SELECT division, product_code, product, total_sold_quantity, rank_order
FROM
	(SELECT p.division, p.product, p.product_code, SUM(f.sold_quantity) AS total_sold_quantity,
		RANK() OVER( PARTITION BY p.division ORDER BY SUM(f.sold_quantity) DESC)  AS rank_order
	FROM fact_sales_monthly f JOIN dim_product p
	ON f.product_code=p.product_code
    WHERE f.fiscal_year=2021
	GROUP BY f.product_code
    ) 
    temp_table
WHERE rank_order<4;

